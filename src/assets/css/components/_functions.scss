// Convert px to rem
@function rem($pixels, $context: 16px) {
    @if (unitless($pixels)) {
      $pixels: $pixels * 1px;
    }
  
    @if (unitless($context)) {
      $context: $context * 1px;
    }
  
    @return $pixels / $context * 1rem;
}

@mixin white-gradient() {
  background: rgba(255,255,255,0.75);
  background: -moz-linear-gradient(top, rgba(255,255,255,0.75) 68%, rgba(255,255,255,0.13) 97%, rgba(255,255,255,0.13) 100%);
  background: -webkit-gradient(left top, left bottom, color-stop(68%, rgba(255,255,255,0.75)), color-stop(97%, rgba(255,255,255,0.13)), color-stop(100%, rgba(255,255,255,0.13)));
  background: -webkit-linear-gradient(top, rgba(255,255,255,0.75) 68%, rgba(255,255,255,0.13) 97%, rgba(255,255,255,0.13) 100%);
  background: -o-linear-gradient(top, rgba(255,255,255,0.75) 68%, rgba(255,255,255,0.13) 97%, rgba(255,255,255,0.13) 100%);
  background: -ms-linear-gradient(top, rgba(255,255,255,0.75) 68%, rgba(255,255,255,0.13) 97%, rgba(255,255,255,0.13) 100%);
  background: linear-gradient(to bottom, rgba(255,255,255,0.75) 68%, rgba(255,255,255,0.13) 97%, rgba(255,255,255,0.13) 100%);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#ffffff', GradientType=0 );
}
